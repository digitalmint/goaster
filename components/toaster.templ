package components

import (
	"github.com/indaco/goaster/components/css"
	"github.com/indaco/goaster/components/js"
	"github.com/indaco/goaster/internal/viewmodel"
	"strconv"
)

templ Container(t viewmodel.ToasterViewModel) {
	@css.GoasterCSSColors()
	@css.GoasterCSS(t.Variant)
	<div class="gttContainer" data-position={ t.Position }>
		for _, toast := range t.Toasts {
			@component(toast, t)
		}
	</div>
	@js.GoasterJS()
}

templ component(t viewmodel.ToastViewModel, toaster viewmodel.ToasterViewModel) {
	<div
		role="alert"
		class={ "gttToast", "gttShow", viewmodel.GetToastEntranceClass(toaster.Position) }
		data-bordered={ strconv.FormatBool(toaster.Border) }
		data-rounded={ strconv.FormatBool(toaster.Rounded) }
		data-level={ t.Level }
		if toaster.Variant != "" {
			data-variant={ toaster.Variant }
		}
		data-position={ toaster.Position }
		data-animation={ strconv.FormatBool(toaster.Animation) }
		if toaster.AutoDismiss {
			data-auto-dismiss="true"
		} else {
			data-auto-dismiss="false"
		}
	>
		if toaster.AutoDismiss && toaster.ProgressBar {
			<div class="gttProgressBar"></div>
		}
		if toaster.ShowIcon {
			<div class="gttIcon">
				@templ.Raw(t.Icon)
			</div>
		}
		<p class="gttMessage">{ t.Message }</p>
		if toaster.Button {
			<button class="gttCloseBtn">
				<span class="gttSrOnly">Dismiss</span>
				<svg style="stroke: currentColor; flex-shrink: 0; width: 1rem; height: 1rem;" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
					<path d="M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z"></path>
				</svg>
			</button>
		}
	</div>
}
